<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.padeoe.dao.IRiskOperationDao">
  <resultMap id="BaseResultMap" type="com.padeoe.pojo.RiskOperation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="risk_id" jdbcType="INTEGER" property="riskId" />
    <result column="creator_name" jdbcType="VARCHAR" property="creatorName" />
    <result column="tracer_name" jdbcType="VARCHAR" property="tracerName" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="possibility" jdbcType="INTEGER" property="possibility" />
    <result column="influence" jdbcType="INTEGER" property="influence" />
  </resultMap>
  <resultMap id="RiskResultMap" type="com.padeoe.pojo.Risk" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="possibility" property="possibility" jdbcType="INTEGER" />
    <result column="influence" property="influence" jdbcType="INTEGER" />
    <result column="threshold" property="threshold" jdbcType="VARCHAR" />
    <result column="risk_brief" property="riskBrief" jdbcType="VARCHAR" />
    <result column="risk_detail" property="riskDetail" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List">
    id, risk_id, creator_name, tracer_name, project_name, state, update_time, description, 
    possibility, influence
  </sql>
  <sql id="Risk_Column_List" >
    id, possibility, influence, threshold, risk_brief, risk_detail
  </sql>
  
  <select id="selectByProjectLatest" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List"/> from risk_operation_t
  	where project_name = #{projectName,jdbcType=VARCHAR}
  	and (risk_id, id) in (select risk_id, max(id) id from risk_operation_t group by risk_id);
  </select>
  
  <select id="selectByCondition" parameterType="com.padeoe.pojo.RiskOperation" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from risk_operation_t
    <where>
      <if test="riskId != null">
        risk_id = #{riskId,jdbcType=INTEGER}
      </if>
      <if test="creatorName != null">
        creator_name = #{creatorName,jdbcType=VARCHAR}
      </if>
      <if test="tracerName != null">
        tracer_name = #{tracerName,jdbcType=VARCHAR}
      </if>
      <if test="projectName != null">
        project_name = #{projectName,jdbcType=VARCHAR}
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER}
      </if>
      <if test="startTime != null">
        update_time &gt;= #{startTime,jdbcType=TIMESTAMP}
      </if>
      <if test="endTime != null">
        update_time &lt;= #{endTime,jdbcType=TIMESTAMP}
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR}
      </if>
      <if test="possibility != null">
        possibility = #{possibility,jdbcType=INTEGER}
      </if>
      <if test="influence != null">
        influence = #{influence,jdbcType=INTEGER}
      </if>
    </where>
  </select>

  <select id="selectByConditionLatest" parameterType="com.padeoe.pojo.RiskOperation" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from (select * from risk_operation_t
    <where>
      <if test="riskId != null">
        risk_id = #{riskId,jdbcType=INTEGER}
      </if>
      <if test="creatorName != null">
        creator_name = #{creatorName,jdbcType=VARCHAR}
      </if>
      <if test="tracerName != null">
        tracer_name = #{tracerName,jdbcType=VARCHAR}
      </if>
      <if test="projectName != null">
        project_name = #{projectName,jdbcType=VARCHAR}
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER}
      </if>
      <if test="startTime != null">
        update_time &gt;= #{startTime,jdbcType=TIMESTAMP}
      </if>
      <if test="endTime != null">
        update_time &lt;= #{endTime,jdbcType=TIMESTAMP}
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR}
      </if>
      <if test="possibility != null">
        possibility = #{possibility,jdbcType=INTEGER}
      </if>
      <if test="influence != null">
        influence = #{influence,jdbcType=INTEGER}
      </if>
    </where> order by update_time desc) as A
    group by A.risk_id,A.project_name

  </select>

  <select id="queryByState" parameterType="java.lang.Integer" resultMap="RiskResultMap">
    select
    <include refid="Risk_Column_List" />,count
    from risk_t
    inner join
    (select risk_id as id,count(id) as count from risk_operation_t where state = #{state,jdbcType=INTEGER} group by risk_id) as A on risk_t.id = A.id
  </select>

  <select id="queryByStateLatest" parameterType="java.lang.Integer" resultMap="RiskResultMap">
    select
    <include refid="Risk_Column_List" />,count
    FROM
    risk_t
    INNER JOIN (
    SELECT
    risk_id AS id,
    count(id) AS count
    FROM
    ( select * from
    (
    SELECT
    *
    FROM
    risk_operation_t
    WHERE
    state = 1
    ORDER BY
    update_time DESC
    ) AS B
    GROUP BY
    B.risk_id,
    B.project_name

    ) AS C
    GROUP BY
    risk_id
    ) AS A ON risk_t.id = A.id
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from risk_operation_t
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from risk_operation_t
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.padeoe.pojo.RiskOperation" useGeneratedKeys="true" keyProperty="id">
    insert into risk_operation_t (id, risk_id, creator_name, 
      tracer_name, project_name, state, 
      update_time, description, possibility, 
      influence)
    values (#{id,jdbcType=INTEGER}, #{riskId,jdbcType=INTEGER}, #{creatorName,jdbcType=VARCHAR}, 
      #{tracerName,jdbcType=VARCHAR}, #{projectName,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{description,jdbcType=VARCHAR}, #{possibility,jdbcType=INTEGER}, 
      #{influence,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.padeoe.pojo.RiskOperation" useGeneratedKeys="true" keyProperty="id">
    insert into risk_operation_t
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="riskId != null">
        risk_id,
      </if>
      <if test="creatorName != null">
        creator_name,
      </if>
      <if test="tracerName != null">
        tracer_name,
      </if>
      <if test="projectName != null">
        project_name,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="possibility != null">
        possibility,
      </if>
      <if test="influence != null">
        influence,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="riskId != null">
        #{riskId,jdbcType=INTEGER},
      </if>
      <if test="creatorName != null">
        #{creatorName,jdbcType=VARCHAR},
      </if>
      <if test="tracerName != null">
        #{tracerName,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null">
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="possibility != null">
        #{possibility,jdbcType=INTEGER},
      </if>
      <if test="influence != null">
        #{influence,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.padeoe.pojo.RiskOperation">
    update risk_operation_t
    <set>
      <if test="riskId != null">
        risk_id = #{riskId,jdbcType=INTEGER},
      </if>
      <if test="creatorName != null">
        creator_name = #{creatorName,jdbcType=VARCHAR},
      </if>
      <if test="tracerName != null">
        tracer_name = #{tracerName,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null">
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="possibility != null">
        possibility = #{possibility,jdbcType=INTEGER},
      </if>
      <if test="influence != null">
        influence = #{influence,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.padeoe.pojo.RiskOperation">
    update risk_operation_t
    set risk_id = #{riskId,jdbcType=INTEGER},
      creator_name = #{creatorName,jdbcType=VARCHAR},
      tracer_name = #{tracerName,jdbcType=VARCHAR},
      project_name = #{projectName,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR},
      possibility = #{possibility,jdbcType=INTEGER},
      influence = #{influence,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>